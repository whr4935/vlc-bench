apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "org.videolan.vlcbenchmark"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "VLC_VERSION", "\"2.1.2\"")

        resValue "string", "build_time", buildTime()
        resValue "string", "build_host", hostName()
        resValue "string", "build_revision", revision()
        resValue "string", "build_api_address", apiAddress()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:preference-v7:25.3.1'
    compile 'com.android.support:preference-v14:25.3.1'
    compile 'com.google.android.gms:play-services-auth:10.2.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}

static def apiAddress() {
    return InetAddress.localHost.address
}

static def hostName() {
    return System.getProperty("user.name") + "@" + InetAddress.localHost.hostName
}

static def buildTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def revision() {
    def code = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = code
    }
    return code.toString()
}